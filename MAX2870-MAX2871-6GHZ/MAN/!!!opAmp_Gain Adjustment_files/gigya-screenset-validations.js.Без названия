(function(){'use strict';if(!Object.keys){Object.keys=function(obj){var arr=[];var key;for(key in obj){if(obj.hasOwnProperty(key)){arr.push(key);}}
return arr;};}
function err(){if(typeof console==='object'&&console.error){console.error.apply(console,arguments);}}
var lastResponse={};function userValidate(validateFunc,formData,eventType,callback){var formDataStr=JSON.stringify(formData)+eventType;if(lastResponse.formDataStr===formDataStr){if(lastResponse.errors){callback(lastResponse.errors);}else{if(!lastResponse.watchers){lastResponse.watchers=[];}
lastResponse.watchers.push(callback);}
return;}
lastResponse={formDataStr:formDataStr};var validationResultCallbackFired=false;var maybeErrors=validateFunc(formData,eventType,validationResultCallback);if(maybeErrors){validationResultCallback(maybeErrors);}
function validationResultCallback(errors){if(validationResultCallbackFired===true){err('Validate result triggered twice - do not return an object AND fire callback');return;}
validationResultCallbackFired=true;lastResponse.errors=errors;if(lastResponse.watchers){var i;for(i in lastResponse.watchers){lastResponse.watchers[i](errors);}}
callback(errors);}}
$(window).load(function(){var setPluginInstance=gigya._.plugins.setPluginInstance;gigya._.plugins.setPluginInstance=function(params,plugin){if(plugin.namespace==='accounts'){try{patchSDK();}catch(e){err('Failed to initialize screenset validation',e);}}
return setPluginInstance.apply(this,arguments);};});function patchSDK(){var ScreenSet=gigya._.plugins.ScreenSet;var TermsInput=gigya._.plugins.ScreenSet.TermsInput;if(TermsInput){TermsInput.FORM_TYPE_CRITERIA=function(context){return context.type==='checkbox';};}
var LoginIdInput=gigya._.plugins.ScreenSet.LoginIdInput;var serverQueryDone=LoginIdInput.prototype.serverQueryDone;LoginIdInput.prototype.serverQueryDone=function(res,checkedValue,callback){if(this._validityState!==ScreenSet.ValidityStates.error){serverQueryDone.apply(this,arguments);}};var BaseForm=gigya._.plugins.ScreenSet.BaseForm;var validate=BaseForm.prototype.validate;BaseForm.prototype.validate=function(callback){var _this=this;var args=arguments;var params=_this._screenSet.params;var screenID=_this._parent.ID;if(!params.validation||typeof params.validation!=='object'||!params.validation[screenID]){return validate.apply(_this,args);}
_this._screen.dimScreen();userValidate(params.validation[screenID],_this.getFlatFormData(false,true),'submit',function(errors){_this._screen.undimScreen();if(!errors||typeof errors!=='object'||Object.keys(errors).length===0){return validate.apply(_this,args);}
validate.call(_this,function(isValid){var key;for(key in errors){if(key==='_form'){_this.showErrors([{errorCode:400003,errorMessage:errors[key]}],true);continue;}
var field=_this.getField(key);if(field){field.setValidityState(ScreenSet.ValidityStates.error,true);}
var errorDisplay=_this._errorDisplayElements[key]&&_this._errorDisplayElements[key][0];if(errorDisplay&&typeof errors[key]==='string'){errorDisplay.showError({errorCode:400027,errorMessage:errors[key]});}}
callback(false);});});};var onInputChange=BaseForm.prototype.onInputChange;BaseForm.prototype.onInputChange=function(field,setByScript){var _this=this;var args=arguments;if(setByScript){return onInputChange.apply(_this,args);}
var params=_this._screenSet.params;var screenID=_this._parent.ID;if(!params.validation||typeof params.validation!=='object'||!params.validation[screenID]){return onInputChange.apply(_this,args);}
field.setValidityState(ScreenSet.ValidityStates.pending);userValidate(params.validation[screenID],_this.getFlatFormData(false,true),'change',function(errors){onInputChange.apply(_this,args);var key=field.normalizedFieldName;if(errors[key]){field.setValidityState(ScreenSet.ValidityStates.error,true);var errorDisplay=_this._errorDisplayElements[key]&&_this._errorDisplayElements[key][0];if(key==='data.terms'&&!errorDisplay&&_this._errorDisplayElements['null']){errorDisplay=_this._errorDisplayElements['null'][0];}
if(errorDisplay&&typeof errors[key]==='string'){errorDisplay.showError({errorCode:400027,errorMessage:errors[key]});}}});}};var css='.gigya-form-error-msg.gigya-error-msg-active { margin-top: 25px !important; } .gigya-composite-control-submit { padding-bottom: 0 !important; } .gigya-layout-row.link-row { margin-top: 25px; !important; }';var head=document.head||document.getElementsByTagName('head')[0];var style=document.createElement('style');style.type='text/css';if(style.styleSheet){style.styleSheet.cssText=css;}else{style.appendChild(document.createTextNode(css));}
head.appendChild(style);})();